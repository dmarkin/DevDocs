Директивы — это изменение поведения или преобразование модели DOM, связанное с пользовательским атрибутом, именем элемента или css классом.
Директивы позволяют расширять HTML синтаксис, в декларативной форме. Не должны содержать бизнес-логику.
Директивы - позволяют отделять ui от логики и сокращают количество копипасты в шаблонах.
Директива - это просто замысловатый термин для функции, которая запускается в контексте конкретного DOM элемента.

ng-init
ng-submit
ng-class - изменяет CSS классом
ng-href
ng-model
ng-repeat='key in Obj' or 'el in elArray'
ng-include
ng-switch - аналог switch
ng-show/ng-hide

function link(scope, iElement, iAttrs, controller, transcludeFn) {}

В качестве параметров применяются:
- scope – область видимости. Будет использоваться директивой для регистрации обработчиков событий (в терминологии angular – watchers):
   :: create a child scope prototypically inherited with scope: true
   :: create an isolated scope with scope: {} then you can bind some property to parent scopes with '@', '&', '='
   :: decide to not create a new scope and use parent with scope: false (default).

   http://artemdemo.me/blog/scope-%D0%B2-%D0%B4%D0%B8%D1%80%D0%B5%D0%BA%D1%82%D0%B8%D0%B2%D0%B0%D1%85-%D0%B0%D0%BD%D0%B3%D1%83%D0%BB%D0%B0%D1%80%D0%B0-angularjs-directives/

- iElement – экземпляр элемента, в котором будет использоваться директива;
- iAttrs – экземпляр атрибутов элемента;
- ctrl – экземпляр контроллера. Необходимо указывать, если одна из директив элемента, определяет контроллер. Например, в роли контроллера может выступать ngModelController https://docs.angularjs.org/api/ng/type/ngModel.NgModelController
- transcludeFn – функция включения; в качестве аргументов получает конкретный scope и доступна из функции compile (в функции postLink) или функции контроллера директивы.

replace: true - заменяет содержание директивы шаблоном из поля template/temaplateUrl (иначе шаблон дописывается в конец директивы)

transclude: true - включает содержимое вложенных элементов директивы
transclude: 'element' - включает содержимое всех элементов директивы
Включение происходит в месте шаблона директивы, где указана директива ng-transclude.
Элементы, включенные подобным образом, наследуют scope от самой директивы (но не от шаблона, указанного внутри определения директивы)

priority - сначала комплириуются директивы с большим приоритетом


Отличия между контроллерами директив и функциями связывания link:
            Контроллеры                                         Функции связывания
Используют службы (напр. $scope, $element)          Используют только параметры scope, elemet, attrs, ctrl
                                                    (могут называться и по-другому в декларации функции)
Вызываются в начале (в этот момент элементы         Вызываются после вызова контроллеров (сначала pleLink вниз по DOM,
директив и дочерние еще не связаны)                 затем postLink вверх по DOM)
Не может внедрять другие контроллеры                Доступны для внедрения контроллеры через require и 4й аргумент
Внедряет $transcludeFn, связанную с нужным scope    transcludeFn доступна только через замыкание в функции compile





https://docs.angularjs.org/guide/directive
http://www.undefinednull.com/2014/02/11/mastering-the-scope-of-a-directive-in-angularjs/
http://artemdemo.me/blog/scope-%D0%B2-%D0%B4%D0%B8%D1%80%D0%B5%D0%BA%D1%82%D0%B8%D0%B2%D0%B0%D1%85-%D0%B0%D0%BD%D0%B3%D1%83%D0%BB%D0%B0%D1%80%D0%B0-angularjs-directives/

Создание директивы-валидатора
При создании директивы-валидатора необходимо реализовать обработчики для двух случаев:

- изменение модели — конвеерно будут вызваны все функции из массива $formatters;
- изменение представления — конвеерно будут вызваны все функции из массива $parsers. При реализации собственных директив с поддержкой валидации к вызову этих функций приведет вызов метода $setViewValue.
