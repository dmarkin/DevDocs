JavaScript код, который пишет разработчик, исполняется в одном потоке (кроме WebWorkers)
Web Workers – объекты, которые способны обрабатывать код отдельным потоком,
но с их помощью вы не сможете напрямую осуществлять доступ или обновлять DOM

requestIdleCallback - новый API, разработанный для запланированного запуска менее значимых фоновых задач,
что позволяет браузеру освободить немного ресурсов.
Работа с requestIdleCallback должна осуществляться небольшими фрагментами.
Этот способ не подходит для случаев, когда неизвестно время, необходимое для выполнения.
http://www.internet-technologies.ru/articles/article_2695.html

Объект EventSource предназначен для передачи текстовых сообщений с сервера, используя обычный протокол HTTP:
var source = new EventSource(src[, credentials]); // src - адрес с любого домена
Второй необязательный аргумент, если указан в виде { withCredentials: true }, инициирует отправку Cookie и
 данных авторизации при кросс-доменных запросах.
Безопасность при кросс-доменных запросах обеспечивается аналогично XMLHttpRequest.


Преимущества:
Автоматическое пересоединение, с настраиваемой задержкой retry (указывается в ответе сервера).
Проверка текущего состояния подключения по readyState.
Идентификаторы сообщений id для точного возобновления потока данных, последний полученный идентификатор передаётся в заголовке Last-Event-ID.
Кросс-доменность CORS.

Этот набор функций делает EventSource достойной альтернативой WebSocket, которые хоть и потенциально мощнее,
 но требуют реализации всех этих функций на клиенте и сервере, поверх протокола.

shallow copy (поверхностная копия) - новый объект указывает на скопированный объект
deep copy - полностью копируются все свойства и методы

shallow comparison - объекты сравниваются по ссылке


How JS works
https://www.youtube.com/watch?v=8aGhZQkoFbQ
http://latentflip.com/loupe
