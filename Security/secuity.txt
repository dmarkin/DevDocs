https://observatory.mozilla.org - мониторинг безопасности сайта

Атака CSRF
CSRF (Cross-Site Request Forgery, также XSRF) – опаснейшая атака, которая приводит к тому, что хакер может выполнить
 на неподготовленном сайте массу различных действий от имени других, зарегистрированных посетителей.

Типичный способ защиты сайтов – это «секретный ключ» (secret) – специальное значение, которое генерируется
 случайным образом и сохраняется в сессии посетителя. Его знает только сервер, посетителю мы его даже не будем показывать.
Затем на основе ключа генерируется «токен» (token). Токен делается так, чтобы с одной стороны он был отличен от ключа,
 в частности, может быть много токенов для одного ключа, с другой – чтобы было легко проверить по токену,
  сгенерирован ли он на основе данного ключа или нет.
Для каждого токена нужно дополнительное случайное значение, которое называют «соль» salt.
Формула вычисления токена: token = salt + ":" + MD5(salt + ":" + secret)
Далее, токен добавляется в качестве значения скрытого поля к каждой форме, генерируемой на сервере, напр.:
<form action="http://mail.com/send" method="POST">
    <input type="hidden" name="csrf" value="1234:5ad02792a3285252e524ccadeeda3401">
</form>
При её отправке сервер проверит поле csrf. Такой токен также называют «подписью» формы, которая удостоверяет,
 что форма сгенерирована именно на сервере. Также можно вычислять токен по содержащимся в форме полям.

При Ajax-запросах самый простой способ – это дополнительная кука.

1. При авторизации сервер устанавливает куку с именем CSRF-TOKEN, и пишет в неё токен.
2. Код, осуществляющий XMLHttpRequest, получает куку и ставит заголовок X-CSRF-TOKEN с ней:
    var request = new XMLHttpRequest();
    var csrfCookie = document.cookie.match(/CSRF-TOKEN=([\w-]+)/);
    if (csrfCookie) {
        request.setRequestHeader("X-CSRF-TOKEN", csrfCookie[1]);
    }
3. Сервер проверяет, есть ли заголовок и содержит ли он правильный токен.
Защита действует потому, что прочитать куку может только JavaScript с того же домена.

