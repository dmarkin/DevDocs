Angular UI







+

http://iantonov.me/page/sozdanie-direktiv-v-angularjs
https://makeomatic.ru/blog/2013/08/17/AngularJSAdvanced/
http://habrahabr.ru/post/180365/


http://habrahabr.ru/post/181882/ - best practices
http://habrahabr.ru/company/eastbanctech/blog/242455/ - angular-translate
https://docs.angularjs.org/api/ng/service/$q - $q
https://github.com/kriskowal/q/wiki/API-Reference#promisefinallycallback - q
Angular автоматически скрывает контент, который подгружается через Директивы. При использовании фигурных скобок они могут быть видны в тексте документа. При использовании ng-bind вставки не видны, пока Angular не вычислит нужные значения.
Собственные директивы указываются в модуле.
Шаблоны в директивах
Сначала мы задаём тип шаблона как text/ng-template, чтобы браузер не интерпретировал его текст, как JavaScript. Таким образом можно включать текст шаблонов в файл, а не скачивать его отдельными файлами. Также можно использовать свойство template, когда шаблон хранится в строке. Когда шаблон загружается, Angular сохраняет его, и потом его можно использовать в ng-include и ng-view. В ином случае Angular осуществит GET-запрос файла с шаблоном. Все загруженные шаблоны хранятся в $templateCache в течение всей жизни приложения.

+ Сервисы
Сервисы обычно используют не для логики презентаций, а для слоя бизнес-логики. Это общение с бэкендом через REST по Ajax.
Методы "сервисов":
- Constant, Value
 - Factory - метод возвращает объект или функцию (custom services), поэтому мы можем использовать замыкания, или возвращать объект host, к которому можно привязывать методы. Можно создавать приватную и публичную области видимости. Все Фабрики становятся Сервисами
- Service (эквивалент Factory) - метод создаёт новый объект-синглтон, который общается с бэкендом и предоставляет инструменты для работы с бизнес-логикой. Сервис – это объект constructor, который вызывают через ключевое слово new, в связи с чем наша логика связывается с сервисом при помощи ключевого слова this.
- Provider

$http (аналог $.ajax) сервис отвечает за то, что попадает в $scope:
var onSuccessFunction = function(response) {
$scope.user = response.data;}
$http.get('some_addr').then(onSuccessFunction, onErrorFunction);
}

$resources
$interval
$timeout
$animate
$browser
$log
$location

! Явный вызов $apply() необходим только для реализации своих собственных обработчиков событий

$resource - Вместе с $http можно использовать модуль ngResource. В нём есть API $resource, удобное для CRUD-операций (create, read, update, delete). $resource создаёт объект, через который можно общаться с источниками данных по протоколам REST.
http://dunmaksim.blogspot.com/2015/04/rest-api-angular-js.html - REST API (Autors, News, Comments)



Валидация формы
ng-form - автоматически отражает состояние формы в виде модели внутри $scope



https://github.com/radik/diveintoit-angular/tree/step-08/phonebook
http://habrahabr.ru/post/221733/ - учебник
http://jsfiddle.net/achudars/FvLQN/ - табы с использованием jqueryUI
http://campus.codeschool.com/courses/shaping-up-with-angular-js/