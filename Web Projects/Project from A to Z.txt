Процесс разработки:
1. Разворачивание проекта:
Рабочее пространство web-dev - http://www.suneco.nl/over-suneco/blog/2014/a-step-by-step-guide-to-setting-up-webstorm-for-front-end-development.aspx
Скаффолдинг - http://frontender.info/skaffolding-dlya-frontenderov/

Node.js
npm
Install all needed packages: npm i -D packageName (ex., imagemin-cli)
Grunt - http://nano.sapegin.ru/all/grunt-0-4 - Grunt 0.4
Gulp
Webpack

2. Создание дизайн-макета
- Подбор цветов - http://colorhunt.co/, http://coolors.co
- Подбор шрифтов
- Размеры и расположение
- Создание UI-kit
- Для приложений - схематическая прорисовка всех экранов!

2a. Прототипирование
Pingendo http://pingendo.com/ - The simplest app for Bootstrap prototyping

Web-starter kit - https://github.com/google/web-starter-kit

3. Реализация дизайна (See Quality control.docx!)
- Логическая разметка
- Верстка, определение классов
- CSS (шрифты, цвета, картинки, формы, расположение, позиционирование, отступы)
- Поведение (JavaScript Effect)

3a. Адаптирование верстки для различных устройств
Разные подходы: либо две разные версии сайтов для mobile и desktop устройств, либо отзывчивый дизайн
Adaptive (адаптивный, фиксированные размеры и компоновка) > Responsive (отзывчивый, резиновый, тянущийся, относительные размеры и компоновка)
Responsive: fluid greeds - гибкие сетки (блоки в %; колонки не менее 300px;
 тег <meta name="viewport" content="width=device-width,initial-scale=1">);
 гибкие изображения (max-width в % либо картинки вписываем в блоки с шириной в % и задаем max-width: 100%;), media queries
 (для совместимости со старыми браузерами, не использующими mediaqueries, используем: respond.js, css3-mediaqueries.js);
 шрифты для малых экранов: Calibri, Candara, Segoe, Segoe UI, Optima, Arial, Helvetica, sans-serif;

Контрольные точки для media queries:
max-width: 320px
max-width: 480px
max-width: 768px
max-width: 980px
max-width: 1200px
min-width: 1200px
(min-device-width)

https://github.com/stylelint/stylelint - линтинг, валидация CSS
https://github.com/morishitter/stylefmt - линтинг и форматирование CSS
https://github.com/hudochenkov/postcss-sorting - сортировка свойств CSS

www.mediaqueri.es
http://quirktools.com/screenfly - просмотр на различных мониторах

- Реализация кроссбраузерности и кроссплатформенности
Адаптация под IE
IE поддерживает использование специального <meta>-тега, который указывает в режиме совместимости с какой версией IE
следует отрендерить страницу. Если обстоятельства не требуют какой-то специальной версии IE, то самым правильным будет
заставить браузер использовать режим самой последней версии (edge mode).
Если сайт будет находиться на собственном хостинге, то следует убрать этот meta-тег и настроить хостинг
для определения IE и добавления специальных заголовков.
В <head>
    <meta http-equiv="X-UA-Compatible" content="IE=Edge">
    ...
    <!--[if lt IE 9]>
    <script src="http://html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->


Flexbox
http://frontender.info/a-guide-to-flexbox/#svoystva
http://jonibologna.com/flexbox-cheatsheet/

4. JavaScript Functionality
- Адаптация под события мобильных устройств!
    Верстка под мобильные (http://mobileinputtypes.com)

Задержка 300мс для возможности двойного тапа - как убрать
    Android (Chrome 38+), Android Firefox - указываем <meta name="viewport" content="width=device-width"> (отключает двойной тап)
    Android, Windows Phone - touch-action: manipulation; (отключает двойной тап)
    iOS 8+ - эвристическая задержка есть при коротком тапе
    Old browsers - Fastclick JS

Стандарты Touch Events (Apple) & Pointer Events (MS, действующий) www.w3.org/TR/pointerevents
    pointerdown, pointerup - начало и конец касания
    pointerover, pointerenter - вход в границы элемента DOM (рекоменд. использовать последний)
    pointerout, pointerleave - выход из границ элемента DOM (рекоменд. использовать последний)
    pointermove - перемещение указателя внутри элемента DOM
    pointercancel - отмена ввиду наступления других событий

    Pointer Events capture

    Координаты события в Pointer Events:
    pageX, pageY - относительно document
    clientX, clientY - относительно viewport
    screenX, screenY - относительно экрана монитора

    Pointer Events Polyfill github.com/jquery/PEP

    CSS touch action

- Тестирование (в т.ч. TDD, BDD)

http://labjs.com, http://headjs.com - динамические подгрузчики скриптов в зависимости от начальных условий просмотра [аналог Webpack?]
https://www.filamentgroup.com/code/ - библиотеки для адаптирования сайтов

5. Установка счетчиков и виджетов, SEO, форматирование кода, минимизация, углификация

6. Генерация документации https://github.com/jsdoc3/jsdoc

7. Code review. Тестирование QA
Checklist for code review:
Function: does it do what it needs to do? (A good spec goes a long way here)
Bugs
Test coverage
Adherence (commitment) to architecture and patterns
Duplicate code
Code style and formatting

About code review - https://www.kenneth-truyers.net/2016/04/08/code-reviews-why-and-how/

8. Хостинг

9. Домен

10. Установка CMS, заливка проекта на сервер, финальные тесты
- Тестирование при помощи web-служб или букмарклетов
- Оптимизация
- Checklist for project - http://webdevchecklist.com/
- Checklist http://theasder.github.io/development/2015/08/19/what-technical-details-should-a-programmer-of-a-web-application-consider-before-making-the-site-public.html

11.

Workflow for Portfolio Website
https://www.smashingmagazine.com/2013/06/workflow-design-develop-modern-portfolio-website/
